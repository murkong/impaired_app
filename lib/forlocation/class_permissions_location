class PermissionToUser {
  static Future<bool> permissionForLocation() async {
    final request = await [Permission.location].request();
    print(request[Permission.location].toString());
    final status = await Permission.location.status;

    if (status.isDenied || status.isRestricted || status.isLimited) {
      return false;
    } else {
      return true;
    }
  }

  static Future<Position?> determinePosition() async {
    bool serviceEnabled = await Geolocator.isLocationServiceEnabled();

    if (!serviceEnabled) {
      throw 'Location services are disabled.';
    }

    LocationPermission permission = await Geolocator.checkPermission();

    if (permission == LocationPermission.denied) {
      permission = await Geolocator.requestPermission();
      if (permission == LocationPermission.denied) {
        throw 'Location permissions are denied.';
      }
    }

    if (permission == LocationPermission.deniedForever) {
      throw 'Location permissions are permanently denied, we cannot request permissions.';
    }

    return await Geolocator.getCurrentPosition(
      desiredAccuracy: LocationAccuracy.high,
    );
  }
}
